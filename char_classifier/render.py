

def load_label2char():
    label2char = {}
    with open("etl1_label2char.txt", "r") as ins:
        for line in ins:
            line = line.strip()
            if line.endswith("___"):
                line += "  "
            _from, _to = line.split("___")
            if len(_from) == 1:
                _from = " " + _from
            label2char[_from] = _to
    return label2char


label2char = load_label2char()
print(label2char)

labels = [['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'NO', '. ', 'RE', '7 ', 'SP', '/ ', 'SP', 'I ', 'SP', '0 ', '( ', 'SP', 'SP', 'SP', 'SP', 'HA', 'YA', '0 ', 'HE', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', '0 ', 'KU', '0 ', 'U ', '0 ', '0 ', '1 ', 'SP', 'W ', 'SP', 'SP', 'L ', '( ', 'SP', 'SP', 'SP', 'HE', 'MI', '( ', 'TO', 'HE', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'H ', ' I', 'NO', 'NO', 'SP', ' I', 'SP', '0 ', 'U ', '0 ', 'SP', 'I ', 'L ', 'SP', '0 ', 'L ', '0 ', 'MI', '( ', 'HA', 'MI', '0 ', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'NO', ' N', 'L ', '8 ', '0 ', 'SP', '0 ', 'SP', '/ ', 'RU', 'SP', 'SP', 'RE', 'V ', '0 ', 'HE', '1 ', 'SP', 'HE', '( ', ') ', 'HA', 'HE', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', '0 ', 'NO', 'NO', 'TO', 'KA', 'SP', 'SP', '1 ', '0 ', 'L ', 'RU', 'SP', 'SP', 'I ', 'RI', 'X ', 'HA', 'RE', 'SP', 'HA', 'RE', '2 ', '( ', 'HE', 'MI', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', '8 ', 'N ', '1 ', 'U ', 'RI', 'SP', 'SP', 'RE', ' O', '- ', 'N ', '0 ', 'SP', 'HA', 'N ', '- ', 'MI', 'W ', '0 ', 'SP', "' ", 'V ', '( ', 'I ', 'HA', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'U ', '1 ', '1 ', 'V ', '1 ', 'SP', 'SP', 'TO', '0 ', '0 ', 'N ', 'MI', 'SP', 'SP', 'H ', 'SP', ') ', 'MI', '- ', 'SP', '1 ', 'I ', 'RE', 'I ', 'HE', '( ', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'NO', '1 ', '1 ', '1 ', '1 ', '1 ', 'SP', 'SP', 'RU', 'SE', '= ', 'MI', ') ', 'SP', 'NO', 'D ', 'MI', 'NI', 'MI', '0 ', 'SP', '1 ', 'U ', 'HA', 'RE', '0 ', 'HE', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'H ', '0 ', 'TO', '1 ', 'V ', '1 ', 'NO', 'L ', 'W ', 'P ', '- ', '. ', '. ', '0 ', 'I ', 'MU', '4 ', '- ', '- ', '= ', 'HE', 'I ', 'M ', ', ', 'NO', '( ', 'RU', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'N ', 'SP', 'N ', '1 ', 'HA', 'RE', ' N', 'Y ', 'N ', 'HE', '0 ', '0 ', 'NO', 'RU', 'U ', 'SP', 'MI', '/ ', 'RI', 'RE', 'MU', 'X ', 'U ', '0 ', 'N ', '1 ', 'RU', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', '1 ', '( ', 'HA', 'RE', '/ ', '2 ', 'Z ', 'HA', 'HA', 'E ', 'NI', '- ', 'NO', 'HA', 'P ', '- ', 'NI', 'NI', 'MU', ' A', 'HA', 'MI', ') ', 'HE', 'HA', 'RE', 'TO', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'HA', 'Y ', 'TI', 'NI', 'NI', 'MA', 'HA', 'SP', '1 ', 'HE', '0 ', 'SP', 'SP', '( ', 'RI', 'SP', 'SP', '7 ', 'I ', 'SP', '1 ', 'HE', 'NI', 'NI', '- ', 'N ', '1 ', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', ' N', '- ', 'HI', '1 ', '/ ', 'N ', 'MI', '0 ', 'TO', 'SP', ' N', 'SP', 'SP', '0 ', '0 ', 'SP', 'SP', 'SP', '1 ', '0 ', 'U ', ' I', ') ', 'MI', 'T ', '1 ', 'HE', '0 ', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', '0 ', ' N', '0 ', ') ', 'HE', 'Y ', 'HE', 'HA', 'U ', 'HE', '( ', '( ', 'SP', 'SP', '. ', '-6', '= ', 'SP', 'SP', '0 ', 'TA', 'RI', 'N ', '1 ', 'SP', 'RE', 'NI', '+ ', '0 ', 'HE', '( ', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', 'SP', '0 ', ' I', 'SP', 'SP', '0 ', 'SP', 'HU', '- ', '0 ', 'N ', 'YA', '( ', 'HA', 'MI', '0 ', 'SP', 'SP', 'SP', 'SP', 'NO', 'KU', '. ', 'V ', 'M ', '1 ', '0 ', 'NA', '0 ', 'SP', 'SP', 'SP', ') ', 'MI', 'SP', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'SP', '0 ', '7 ', '( ', 'SP', 'NO', '0 ', 'L ', '-6', 'TO', 'HE', 'N ', '( ', 'N ', 'MI', 'T ', 'HA', 'HE', '0 ', ' N', 'NI', 'HA', '0 ', 'U ', '1 ', 'HA', 'RE', '- ', '-6', '-6', '0 ', 'HE', 'SP', '( ', 'MI', 'HE', 'SP', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', '0 ', '/ ', 'NO', 'NO', '- ', 'KE', 'YA', 'I ', 'R ', 'TO', '-6', 'RU', 'I ', '2 ', 'MI', 'HA', 'L ', 'SP', 'T ', '0 ', 'SP', 'V ', 'TA', 'SU', '1 ', 'NO', '- ', '- ', 'RU', '- ', 'D ', 'HO', 'HE', 'HA', 'HA', 'HA', '( ', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', '/ ', '0 ', '1 ', '0 ', ' I', 'I ', '1 ', 'V ', "' ", 'L ', '- ', ' U', 'T ', 'RI', '0 ', 'MI', '( ', 'SP', 'SP', 'SP', '0 ', '4 ', 'KU', '1 ', 'F ', 'Y ', 'HI', '= ', 'U ', 'J ', 'I ', 'NO', 'TO', '0 ', 'MI', '( ', 'HE', '0 ', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'NO', '0 ', 'I ', '1 ', 'NO', 'I ', '0 ', 'RU', '$Y', '- ', '0 ', 'NO', '1 ', 'SP', 'I ', 'SP', 'SP', 'HE', 'SP', 'SP', 'SP', 'NO', 'SP', 'SP', '1 ', 'I ', 'RE', 'HE', 'SP', 'T ', '* ', 'J ', 'Y ', '1 ', 'HE', '1 ', '1 ', 'SP', 'HE', '0 ', 'SP', 'SP'], ['SP', 'SP', 'NO', '0 ', 'SP', '1 ', '( ', 'NO', ') ', 'SP', 'Y ', '0 ', 'SP', 'SP', 'I ', '1 ', 'SP', 'U ', 'SP', 'SP', '0 ', 'HE', 'SP', ' N', '-6', 'SP', 'SP', '1 ', '1 ', 'HA', '1 ', 'SP', 'SP', 'SP', 'HE', '1 ', '1 ', 'HA', ') ', '( ', 'SP', 'SP', 'HE', '0 ', 'SP'], ['SP', '0 ', 'NO', 'SP', 'SP', 'NO', 'V ', '0 ', '0 ', '0 ', '1 ', 'SP', 'SP', 'SP', 'I ', 'NO', 'SP', 'HA', '0 ', 'SP', '/ ', '+ ', 'Y ', 'P ', '. ', '0 ', 'SP', '1 ', '0 ', 'SP', 'U ', 'SP', 'SP', 'SP', 'SP', 'I ', '1 ', 'SP', 'HE', 'MI', '0 ', 'SP', 'SP', 'MI', 'SP'], ['0 ', '/ ', 'SP', 'SP', 'SP', '0 ', 'NO', 'SP', 'SP', 'L ', '1 ', 'SP', 'SP', 'SP', ') ', '0 ', 'SP', '1 ', '0 ', '0 ', 'HA', 'HE', 'W ', 'NO', 'HE', '( ', 'SP', 'H ', 'SP', 'SP', 'N ', 'SP', 'SP', 'SP', 'SP', '( ', '1 ', 'SP', '0 ', 'U ', '( ', 'SP', 'SP', 'HA', '-6'], ['NO', 'SP', 'SP', 'SP', 'NO', '0 ', '0 ', 'SP', 'SP', 'I ', 'NO', 'SP', 'SP', 'SP', 'RI', 'SP', 'SP', '1 ', '0 ', '1 ', '1 ', 'Y ', 'SI', ' A', '0 ', 'HA', 'SP', 'I ', 'SP', 'SP', 'Y ', '0 ', 'SP', 'SP', 'NO', '0 ', 'L ', 'SP', 'SP', ') ', 'I ', 'SP', 'SP', 'SP', '0 '], ['0 ', 'SP', 'SP', 'SP', 'I ', '8 ', 'SP', 'SP', 'SP', 'I ', 'HE', '0 ', 'NI', 'SP', 'Y ', 'SP', 'SP', '1 ', '0 ', 'KU', '0 ', 'HA', '-6', 'NO', 'SP', 'HE', '( ', 'RI', 'SP', 'SP', 'HA', '0 ', '- ', '-6', 'RE', '0 ', '0 ', 'SP', 'SP', '( ', '1 ', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', '1 ', 'NO', 'SP', 'SP', 'SP', 'I ', '+ ', 'HE', 'G ', 'HA', '1 ', 'SP', 'SP', '1 ', 'NI', '0 ', 'SP', '0 ', '0 ', '( ', 'SP', '0 ', 'MI', 'RI', 'SP', 'SP', '0 ', 'V ', 'M ', 'T ', 'N ', 'NO', '0 ', 'SP', 'SP', '1 ', 'I ', 'SP', 'SP', 'SP', 'SP'], ['SP', 'SP', 'SP', 'SP', 'HA', 'SP', 'SP', 'SP', 'SP', '1 ', ') ', 'MU', '0 ', 'V ', '0 ', 'SP', 'SP', 'RE', '1 ', 'SP', 'SP', 'NO', 'SP', '1 ', 'SP', 'SP', '0 ', 'V ', 'SP', 'SP', 'SP', 'V ', '1 ', 'HA', 'RI', ') ', '0 ', 'SP', 'SP', '( ', 'HA', 'SP', 'SP', 'SP', 'SP']]
render = []
for line in labels:
    render.append([label2char[item] for item in line])

print('=================================================================')
for line in render:
    print("".join(line))

print('=================================================================')
